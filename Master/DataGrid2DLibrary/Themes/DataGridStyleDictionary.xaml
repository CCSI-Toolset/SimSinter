<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <LinearGradientBrush x:Key="NormalBackgroundBrush" EndPoint="0.0, 0.0" StartPoint="0.0, 1.0">
        <GradientStop Color="#FFFFFFFF" Offset="0.0"/>
        <GradientStop Color="#FFFFFFFF" Offset="0.4"/>
        <GradientStop Color="#FFF7F8FA" Offset="0.4"/>
        <GradientStop Color="#FFF1F2F4" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HoveredBackground" EndPoint="0.0, 0.0" StartPoint="0.0, 1.0">
        <GradientStop Color="#FFE3F7FF" Offset="0.0"/>
        <GradientStop Color="#FFE3F7FF" Offset="0.4"/>
        <GradientStop Color="#FFBDEDFF" Offset="0.4"/>
        <GradientStop Color="#FFB7E7FB" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBackground" EndPoint="0.0, 0.0" StartPoint="0.0, 1.0">
        <GradientStop Color="#FFBCE4F9" Offset="0.0"/>
        <GradientStop Color="#FFBCE4F9" Offset="0.4"/>
        <GradientStop Color="#FF8DD6F7" Offset="0.4"/>
        <GradientStop Color="#FF8AD1F5" Offset="1.0"/>
    </LinearGradientBrush>
    
    <Style x:Key="DataGridRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <mt:DataGridHeaderBorder x:Name="headerBorder"
 							                     IsSelected="{TemplateBinding IsRowSelected}"
							                     IsHovered ="{TemplateBinding IsMouseOver}"
							                     IsPressed="{TemplateBinding IsPressed}"
							                     Background="{TemplateBinding Background}"
							                     BorderBrush="{TemplateBinding BorderBrush}"
							                     BorderThickness="0,0,0,0"
							                     Padding ="{TemplateBinding Padding}"
							                     Orientation="Horizontal"
							                     SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
							                     SeparatorBrush="{TemplateBinding SeparatorBrush}">
                            <Border BorderThickness="0,0,0,0">
                                <Grid>
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Header}"
                                                Margin="3,0,3,0"
                                                Background="Transparent"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </mt:DataGridHeaderBorder>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="headerBorder" Property="Background" 
									Value="{StaticResource HoveredBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="headerBorder" Property="Background" 
									Value="{StaticResource PressedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="Red" Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
                                         ItemsPanel="{TemplateBinding ItemsPanel}"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <DataGridDetailsPresenter SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                            Grid.Column="1" Grid.Row="1"
                                            Visibility="{TemplateBinding DetailsVisibility}" />

                            <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"  Grid.RowSpan="2"
                                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}" >
        <Setter Property="TextBlock.TextAlignment" Value="Right" />
        <Setter Property="TextBlock.VerticalAlignment" Value="Stretch"/>
        <Setter Property="TextBlock.HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="DarkGray"
                            ContextMenu="{TemplateBinding ContextMenu}"
                            BorderThickness="1,1,1,1"
                            Visibility="{TemplateBinding Visibility}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2"/>
                                <RowDefinition Height="*"/>                                    
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.ZIndex="2" Grid.Row="1" Grid.Column="0" VerticalAlignment="Stretch">
                            </ContentPresenter>
                            <Rectangle x:Name="c_rectangle" Grid.ZIndex="-1" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                        Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DataGridCell.IsEditing" Value="True">
                            <Setter TargetName="c_rectangle" Property="Fill" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=AlternationIndex}" Value="1" >
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AlternatingRowBackground}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=AlternationIndex}" Value="0" >
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=RowBackground}"/>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#3399ff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoveredBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>